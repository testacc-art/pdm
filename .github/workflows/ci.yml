name: Tests

on: [push]

jobs:
  Testing:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false 
      matrix:
        python-version: [3.7, 3.8, 3.9]
        os: [ubuntu-20.04]
        arch: [x64]

    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - name: Install additional packages
        run: |
          sudo apt-get update
          apt-get install gcc-multilib
          # sudo apt install lib32gcc1
          #echo "ls /lib/x86_64-linux-gnu"
          #echo "LD_LIBRARY_PATH is $LD_LIBRARY_PATH"
          #ls /lib/x86_64-linux-gnu
      - name: search file system
        run: find / -type f -name "libgcc_s.so.1"
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.arch }}
        #env:
        #  LD_LIBRARY_PATH: "/lib/x86_64-linux-gnu"
      - name: Set Variables
        id: set_variables
        run: |
          echo "::set-output name=PY::$(python -c 'import hashlib, sys;print(hashlib.sha256(sys.version.encode()+sys.executable.encode()).hexdigest())')"
          echo "::set-output name=PIP_CACHE::$(pip cache dir)"
      - name: Cache PIP
        uses: actions/cache@v2
        with:
          path: ${{ steps.set_variables.outputs.PIP_CACHE }}
          key: ${{ runner.os }}-pip-${{ steps.set_variables.outputs.PY }}
      - name: Install Current PDM
        run: |
          python -m pip install -U .
      - name: Install Dev Dependencies
        run: |
          export LD_PRELOAD=/lib/x86_64-linux-gnu/libgcc_s.so.1
          pdm config parallel_install true
          pdm install -dvv
      - name: Run Tests
        run: pdm run pytest -n auto tests
